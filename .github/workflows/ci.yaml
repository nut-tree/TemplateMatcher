name: Run CI
on:
  push:
    branches-ignore:
      - develop
      - release/**
  pull_request:

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
#      - name: Setup Docker
#        run: |
#          docker pull s1hofmann/nut-ci:latest
#          docker run -it -d --name nut-ci --shm-size 8gb --user $(id -u):$(id -g) -v ${PWD}:${PWD}:rw s1hofmann/nut-ci:latest bash
      - name: Install
        run: npm ci
      - name: Compile
        run: npm run compile
      - name: Run tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm test
#      - name: Run Docker E2E tests
#        run: docker exec nut-ci bash -c "bash $PWD/.build/build.sh ${PWD} 14"

  test:
    needs:
      - sonar
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node: [ 14, 16 ]
        exclude:
          - os: ubuntu-latest
            node: 14
    runs-on: ${{matrix.os}}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node}}
#      - name: Setup Docker
#        if: ${{matrix.os == 'ubuntu-latest'}}
#        run: |
#          docker pull s1hofmann/nut-ci:latest
#          docker run -it -d --name nut-ci --shm-size 8gb -e VNC_COL_DEPT=32 --user $(id -u):$(id -g) -v ${PWD}:${PWD}:rw s1hofmann/nut-ci:latest bash
      - name: Install
        run: npm ci
      - name: Compile
        run: npm run compile
      - name: Run tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm test
#      - name: Run Docker E2E tests
#        if: ${{matrix.os == 'ubuntu-latest'}}
#        run: docker exec nut-ci bash -c "bash $PWD/.build/build.sh ${PWD} ${{matrix.node}}"